///*
// structure of my diary. 
// count when i work: noon/day/night. add a count. also at the date
// write my goal NOW and FUTURE.
// WORK, write what im doing and fixes when finding bugs.
// PROBLEMS, frustrations,issues, etc, stuff i should bother other people about(teachers...)
// this my recording,log,dairy and rubber ducky, /emo
///*

// Night 0: 25/08/2022

Decided to Restart from scratch from the minigin assigment i got from school. the goal is to aim to make 9 old school arcade games. And 1 large complex game using... wel this..
Future, looking at how the rasterizer worked again. also looking at overlord.

// WORK
figure out whats up with a PCh. : DONE/HOW? i set the config to /yc create pre-comp-header, had to add the class manually before it works(spelling was also wrong). then set it back to yu/use
created the github.
SDL2 3rd party libs added.  implemented.
PropSheets file + copied SDL.props,VDL.props from herex2. 
PCH is being annoying again, did not like me writhing in it. 
fixed PCH, every cpp needed it apperantly.
SDL include works, using the _SDL2#def to turn it on and off.
adding the fucntions back off the engine, wrapping relevent code USE_SDL.
going to sleep.


//PROBLEM
github in visual studio still thinks i got a minilord repo someweare even thou i renamed them al to hex.
C2857.. pch

//NOTICE
sdl2 renames the main function using a macro >_>,, why ??

// Night 1: 29/08/2022

//TODO
Continue on inporting the original engine.

//WORK
Added timeManager and SceneManager
reworking the scenemanger to actually have a active Scene.



Day 6/02/2023
should make use of the namespace MiniLord::....

22/03/23
lesson on implementing the inputmanager, need to start on the actual game right now. running out of time.

class feedback.
if you use a function var, its okey to copy if plan on doing grand changes to the copy anyway and keep it/return it.
dont use int* buffer[]; when you can use std::vector. it is better for RAII.

good tip, this auto creates a buffer of size 2to26 and all are filled with 3;
const int buffer length {1 << 26};
auto buffer {vector<int>(bufferlength,3)};


les_06 29/03/2023
c++ coding standards.
implement observer pattern
https://refactoring.guru/design-patterns/observer
https://en.wikipedia.org/wiki/Observer_pattern
https://incusdata.com/blog/design-patterns-observer-pattern
https://gameprogrammingpatterns.com/observer.html


les_07 19/04/2023
fouten feedback.
this niet echt de speler die de punten zou moeten bijhouden, maar de score zelf...?
achviement zou niet in de scorecompoent mogen zitten.
achievements moeten in appparte observer/singleton zitten best.
achievement mag ook maar lokaal 1 keer poppen.
teach uses template <typename... args> voor de observers. kan dan basicly iedere value meegeven.
BOX 2D physics engine 

static var die echt gewoon class specific zijn kunnen gewoon in de cpp & in plaats van de header. // bespaart compile time.

feedback allocators.
oppassen met: Object* ob = new (allocoter) object();
de constructor wordt aangeroepen mqaar de destructor gaat daarom niet af bij release.
vergeet daarom niet delete aan te roepen.
de stack en fixedSize kunnen niet fragmenteren. als ze fragmentat

de reden dat die 16 erin zat is om zowiezo als je data aavraagt is de dat "block" minsten 16 bytes niet bits.
Interesting!!! dia = zit fout in alex zijn allocator/ infinite loop.
